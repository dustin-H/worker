"use strict";(self.webpackChunkgraphile_worker=self.webpackChunkgraphile_worker||[]).push([[8412],{9740:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"2023-12-11-016-release","metadata":{"permalink":"/news/2023-12-11-016-release","source":"@site/news/2023-12-11-016-release.mdx","title":"Worker 0.16 released","description":"Graphile Worker Version 0.16 is now ready, and brings a new plugin system along with many other features!","date":"2023-12-11T00:00:00.000Z","formattedDate":"December 11, 2023","tags":[{"label":"releases","permalink":"/news/tags/releases"}],"readingTime":6.905,"hasTruncateMarker":false,"authors":[{"name":"Benjie","title":"Creator of Worker","url":"https://github.com/Benjie","image_url":"https://github.com/Benjie.png","imageURL":"https://github.com/Benjie.png"},{"name":"Jem","title":"\u201cI wear many hats\u201d","url":"https://fosstodon.org/@jem","image_url":"https://github.com/jemgillam.png","imageURL":"https://github.com/jemgillam.png"}],"frontMatter":{"title":"Worker 0.16 released","description":"Graphile Worker Version 0.16 is now ready, and brings a new plugin system along with many other features!","slug":"2023-12-11-016-release","authors":[{"name":"Benjie","title":"Creator of Worker","url":"https://github.com/Benjie","image_url":"https://github.com/Benjie.png","imageURL":"https://github.com/Benjie.png"},{"name":"Jem","title":"\u201cI wear many hats\u201d","url":"https://fosstodon.org/@jem","image_url":"https://github.com/jemgillam.png","imageURL":"https://github.com/jemgillam.png"}],"tags":["releases"]}},"content":"import FooterImage from \\"@site/static/img/homepage/ant-footer.svg\\";\\n\\n## Reliable, extensible and performant\\n\\nWorker 0.16 is here \u2014 freshly updated with optional TypeScript typing for tasks,\\na public `jobs` interface, a new plugin system, and much more besides!\\n\\nThe new plugin system enables ESM and CommonJS to peacefully coexist, adds\\nsupport for writing tasks in `import()`\u2013capable compile\u2013to\u2013JS languages like\\nTypeScript, adds support for writing tasks in alternative languages (e.g.\\nPython, Ruby, Rust), and could open the door to a lot more customizability in\\nfuture! Version 0.16 also introduces support for \u201cWorker Pro\u201d \u2014 a plugin\\navailable to most Sponsors which monitors running workers, releases locked jobs\\nfrom workers that exit uncleanly, helps ease migrations to new releases, and\\nwill add more quality\u2013of\u2013life improvements in time.\\n\\nWe\u2019ve backported a large amount of v0.16\u2019s functionality to v0.13 and v0.15;\\nthis includes plugin and Worker Pro support to ease migration to the new\\nversion.\\n\\nThank you to each and every one of our sponsors, together you have made this\\nmassive release possible!\\n\\n<div class=\\"prettyDivide\\">\\n\\n<FooterImage />\\n\\n</div>\\n\\n### What\u2019s new in Version 0.16?\\n\\n#### Graphile Worker gets a logo!\\n\\nInspired by the Graphile heart and the PostGraphile elephant, Graphile Worker\\ngets its new heart\u2013shaped worker\u2013ant logo. We admire the industriousness of\\nrainforest leaf\u2013cutter ants, relentlessly working away traversing miles of\\nbranches to bring food and messages back to their colony. What better animal to\\nrepresent the spirit of Graphile Worker?\\n\\n<figure>\\n\\n[![The new Graphile Worker logo is an ant face](../static/img/news/2023-11-29-graphile-logos.svg)](../static/img/news/2023-11-29-graphile-logos.svg)\\n\\n</figure>\\n\\n#### New Graphile Worker website!\\n\\nAs Graphile Worker\u2019s featureset has been growing, managing it all through a\\nREADME has become challenging, both for users and for maintenance. We\u2019ve moved\\nall the documentation to a new website and spent some time overhauling it with\\nnew tips and notes (and corrections). You\u2019re on that new site right now! See the\\nnew documentation at [worker.graphile.org/docs/](/docs/).\\n\\n#### Graphile Config and the new plugin system\\n\\nWorker is now optionally configurable with [Graphile Config](/docs/config/).\\nThis enables a whole suite of new options and features, not the least of which\\nis you can now share preset files across multiple projects! Graphile Config\\ntakes everything we\u2019ve learned from the PostGraphile project relating to\\nconfiguration and plugins and expands these capabilities into a generic system\\nthat Worker can leverage. The plumbing has been completed, the initial hooks are\\nthere and ready to be used by everyone to make Worker even more adaptable and\\npowerful than ever before. If you need to do something that there\u2019s not a hook\\nfor yet, adding a suitable one is likely straightforward\u2026 get in touch for\\nguidance!\\n\\n#### Native ESM support!\\n\\nThe first thing we did with the new plugin system was to move the code for\\nloading a task into its own plugin, and add support for loading both CommonJS\\nfiles and ESM files. Since it\u2019s a plugin, you can replace it entirely, loading\\ntasks in any way you see fit!\\n\\n#### Compile\u2013to\u2013JS language support!\\n\\nWith the plugin mentioned above you can add more file extensions to your config\\nfor any \u201ccompile\u2013to\u2013javascript\u201d language that can be `import()`\u2013ed \u2014 just be\\nsure to make the relevant \\"loaders\\" available, e.g. for native TypeScript\\nsupport you might use `NODE_OPTIONS=\\"--loader ts-node/esm\\" npx graphile-worker`\\n\\n#### Tasks in even more languages!\\n\\nAnd the fun doesn\'t stop there! We\'ve added another built\u2013in plugin that allows\\nus to offer support for writing task executors in other languages entirely:\\npython, bash, even _fortran_; choose whichever language makes the most sense for\\nthe task at hand. All you need to do is place an executable file in the `tasks/`\\nfolder and ensure it\'s named with the task identifier (extensions are ignored).\\n\\n#### abortSignal\\n\\nWe have added the JavaScript pattern of `abortSignal` \u2014 a new ability to tell\\ntasks to abort during shutdown. This means no more waiting for the task to\\ncomplete during a graceful shutdown, so long as your task executor remembers to\\nlisten for the `abortSignal` your job can exit quickly when the worker is\\nshutting down, and boot up again soon thereafter on a different worker.\\n\\n#### Opt\u2013in TypeScript typing of tasks\\n\\nNow you can take down the guard rails, and _assume_ the job type using the new\\n`GraphileWorker.Tasks` global interface. This is not for the faint of heart, and\\nin fact we don\u2019t generally recommend it! But it has been requested many times,\\nand now it is available to use via a public\u2013facing declaration\u2013mergeable\\ninterface. Declaring a global task interface allows you to use auto\u2013complete and\\npayload safety for `addJob` and `quickAddJob`, and specifies the assumed types\\nof the payloads of your task functions. More, including important caveats, can\\nbe found [in our documentation](/docs/typescript).\\n\\n<figure>\\n\\n[![Felix Unger from the Odd Couple shows the word assume makes an ass out of u and me.](../static/img/news/2023-11-29-assumptions.jpg)](../static/img/news/2023-11-29-assumptions.jpg)\\n\\n<figcaption>\\n\\nRemember the caveats of\\n[what it means to assume\u2026](https://youtu.be/KEP1acj29-Y?si=4UDpo9oLW5zbrvnh&t=41)\\n\\n</figcaption>\\n\\n</figure>\\n\\n#### Public jobs view\\n\\nThis release makes it much clearer that the tables in which jobs and queues are\\nstored are private implementation details \u2014 Graphile Worker needs to be able to\\nchange these tables to add new features or perform optimizations. For those\\nusers who look into the jobs table, even though we advise against it, we\'ve\\ncreated a public view that presents a stable interface into the queued jobs. We\\nstrongly advise against polling this, it will impact the performance of your\\nworker, but it is now more suitable for usage in automated scripts since the\\ninterface is stable.\\n\\n#### Worker Pro: upgrade your experience!\\n\\nWith thanks to each and every sponsor (past and present) for reinvesting back\\ninto open source, the growth of our community\u2013based funding over the last six\\nyears has enabled us to spend more and more time maintaining and improving our\\n[various open source packages](https://graphile.org). These past few months\\nwe\'re grateful to welcome Trigger.dev and Seam as the latest in the\\norganizations reinvesting in the software they use \u2014 thank you!\\n\\nAlas, a significant amount of our maintenance and development time is still\\nself\u2013funded; so in an attempt to make this project more sustainable, we have\\nintroduced the proprietary Worker Pro plugin, and initially made it available to\\nsponsors on the $25/mo tier and above.\\n\\nWorker Pro adds worker tracking to Graphile Worker, making it a clean separation\\nfrom the open source version which does not track the individual workers. With\\nWorker Pro, each worker checks in with a \\"heartbeat\\" every so often, and we can\\nuse this in various ways.\\n\\nFor example, we have had feedback from the community that having to stop all\\nworkers in advance of updating to a new release is not ideal. With Worker Pro,\\nbefore performing a breaking migration a graceful shutdown of all old workers is\\ntriggered, and further old workers are prevented from starting up. Once Worker\\nPro has confirmed all old workers have completed their graceful shutdowns, the\\nmigration can go ahead with significantly reduced risk of conflict. This avoids\\nthe need to \u201cscale to zero\u201d as all workers will communicate with each other to\\nhelp the system as a whole remain consistent, and the newly running workers can\\ngracefully take over from the old.\\n\\nThis new plugin also helps with crashed worker recovery: once a configurable\\namount of time has passed without receiving a heartbeat from a registered\\nworker, Worker Pro can assume that the worker is no longer running (power\\npulled, killed, crashed, etc) and release all of its locked jobs to be\\nre\u2013attempted.\\n\\nThere are a couple more major features planned for \u201cWorker Pro\u201d, and once they\\nare added it will be available via the $100 sponsorship tier. Now is a great\\ntime to [sponsor Graphile](https://graphile.org/sponsor) and lock in this\\nawesome 75% discount launch offer for at least 18 months!\\n\\nTo get access to \u201cWorker Pro\u201d, please reach out to Benjie or Jem on Discord or\\nemail team [at] graphile [dot] org \u2014 for the introductory offer you must ensure\\nyou have access before the price goes up!\\n\\n_Join our community \u2014 we run [a Discord server](https://discord.gg/graphile)\\nwhich can be used for community support and to chat to others using the Graphile\\nsuite of developer tools. Find out how to sponsor us at\\n[graphile.org/sponsor](https://graphile.org/sponsor)._\\n\\n_Full release notes found [on this site](/releases/) or\\n[at GitHub](https://github.com/graphile/worker/blob/main/RELEASE_NOTES.md)._\\n\\n<figure>\\n\\n[![A handdrawn image of an ant holding up a green heart](../static/img/news/ant-heart.svg)](../static/img/news/ant-heart.svg)\\n\\n<figcaption>\\n\\nThank you Graphile sponsors!\\n\\n</figcaption>\\n\\n</figure>"}]}')}}]);