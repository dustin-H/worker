"use strict";(self.webpackChunkgraphile_worker=self.webpackChunkgraphile_worker||[]).push([[8449],{9916:(e,r,n)=>{n.d(r,{xA:()=>l,yg:()=>p});var t=n(3696);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),u=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},l=function(e){var r=u(e.components);return t.createElement(s.Provider,{value:r},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),y=o,p=d["".concat(s,".").concat(y)]||d[y]||h[y]||i;return n?t.createElement(p,a(a({ref:r},l),{},{components:n})):t.createElement(p,a({ref:r},l))}));function p(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=y;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},225:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var t=n(8102),o=(n(3696),n(9916));const i={title:"Techniques"},a=void 0,c={unversionedId:"techniques",id:"techniques",title:"Techniques",description:"This page outlines some of the techniques that may not be obvious but allow you",source:"@site/docs/techniques.md",sourceDirName:".",slug:"/techniques",permalink:"/docs/techniques",draft:!1,editUrl:"https://github.com/graphile/worker/tree/main/website/docs/techniques.md",tags:[],version:"current",frontMatter:{title:"Techniques"},sidebar:"tutorialSidebar",previous:{title:"Scaling tips",permalink:"/docs/scaling"},next:{title:"WorkerEvents",permalink:"/docs/worker-events"}},s={},u=[{value:"Limiting concurrency",id:"limiting-concurrency",level:2},{value:"Dedicated worker with specific concurrency",id:"dedicated-worker-with-specific-concurrency",level:3},{value:"Multiple queue names",id:"multiple-queue-names",level:3},{value:"Forbidden flags",id:"forbidden-flags",level:3},{value:"Managing priority",id:"managing-priority",level:2},{value:"Dedicated high-priority worker",id:"dedicated-high-priority-worker",level:3},{value:"Run greater concurrency",id:"run-greater-concurrency",level:3},{value:"Limit concurrency of slow tasks",id:"limit-concurrency-of-slow-tasks",level:3},{value:"Scale up on-demand",id:"scale-up-on-demand",level:2},{value:"Worker events",id:"worker-events",level:3}],l={toc:u},d="wrapper";function h(e){let{components:r,...n}=e;return(0,o.yg)(d,(0,t.A)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This page outlines some of the techniques that may not be obvious but allow you\nto extract more power from Graphile Worker."),(0,o.yg)("h2",{id:"limiting-concurrency"},"Limiting concurrency"),(0,o.yg)("p",null,"Out of the box, Graphile Worker supports jobs being added to a named queue (in\nwhich case that queue has a concurrency of 1) or not being added to a queue (in\nwhich case the jobs can execute as quickly as there are workers to execute\nthem). Sometimes you want to limit concurrency to a small number, but larger\nthan 1... Here are some techniques you can use to do this."),(0,o.yg)("h3",{id:"dedicated-worker-with-specific-concurrency"},"Dedicated worker with specific concurrency"),(0,o.yg)("p",null,"With this technique, you'd make sure that only one worker supports this task\nidentifier (and that worker supports this task identifier only), and then you\nrun this worker with the desired concurrency and make sure not to add the jobs\nto a named queue."),(0,o.yg)("p",null,"This is effective, but it requires running a separate worker which may spend a\nlot of time idle."),(0,o.yg)("p",null,"A variant of this technique is to run N dedicated workers each with concurrency\nM, where N","*","M is your desired concurrency."),(0,o.yg)("h3",{id:"multiple-queue-names"},"Multiple queue names"),(0,o.yg)("p",null,"Whether via round-robin, random, or some other method; this technique has you\ncreate as many named queues as you need concurrency and schedule tasks into\nthese queues."),(0,o.yg)("p",null,"One trade-off of this approach is that jobs may not be ran in the desired\norder - order is only maintained within each named queue, but if jobs in one\nnamed queue execute faster or slower than others, the tasks may come out of\nsync."),(0,o.yg)("h3",{id:"forbidden-flags"},"Forbidden flags"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/forbidden-flags"},"Read more here"),"."),(0,o.yg)("h2",{id:"managing-priority"},"Managing priority"),(0,o.yg)("p",null,"So you've got some new jobs that need to execute ",(0,o.yg)("em",{parentName:"p"},"right now"),", but your workers\nare all busy executing long-running boring background tasks already? Here's some\nsolutions!"),(0,o.yg)("h3",{id:"dedicated-high-priority-worker"},"Dedicated high-priority worker"),(0,o.yg)("p",null,"Assuming that your high priority tasks belong to their own task identifier, you\ncan run a separate worker that's dedicated to this task identifier and will pick\nup on the jobs as soon as they're available (assuming you have sufficient\nconcurrency)."),(0,o.yg)("h3",{id:"run-greater-concurrency"},"Run greater concurrency"),(0,o.yg)("p",null,"Either running more workers or have your workers have higher concurrency, or\nboth."),(0,o.yg)("h3",{id:"limit-concurrency-of-slow-tasks"},"Limit concurrency of slow tasks"),(0,o.yg)("p",null,'Use the "limiting concurrency" techniques above on your slow tasks, which should\nmean that you always have reserve capacity available for high priority jobs.'),(0,o.yg)("h2",{id:"scale-up-on-demand"},"Scale up on-demand"),(0,o.yg)("h3",{id:"worker-events"},"Worker events"),(0,o.yg)("p",null,"Use ",(0,o.yg)("a",{parentName:"p",href:"/docs/worker-events"},"the events system")," to detect when your workers are\noverwhelmed, and scale up as necessary. One common signal for this is when the\n",(0,o.yg)("inlineCode",{parentName:"p"},"run_at")," of a job that you start executing is significantly before the current\ntime minus the ",(0,o.yg)("inlineCode",{parentName:"p"},"pollInterval")," (assuming that your database and worker clocks are\nsynchronized)."))}h.isMDXComponent=!0}}]);