"use strict";(self.webpackChunkgraphile_worker=self.webpackChunkgraphile_worker||[]).push([[6087],{9916:(e,r,n)=>{n.d(r,{xA:()=>c,yg:()=>h});var t=n(3696);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),d=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=d(e.components);return t.createElement(s.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),g=a,h=u["".concat(s,".").concat(g)]||u[g]||p[g]||o;return n?t.createElement(h,i(i({ref:r},c),{},{components:n})):t.createElement(h,i({ref:r},c))}));function h(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7054:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=n(8102),a=(n(3696),n(9916));const o={title:"Error handling",sidebar_position:130},i="Error handling",l={unversionedId:"error-handling",id:"error-handling",title:"Error handling",description:"You might be wondering &ldquo;what happens if something goes wrong?&rdquo; Here",source:"@site/docs/error-handling.md",sourceDirName:".",slug:"/error-handling",permalink:"/docs/error-handling",draft:!1,editUrl:"https://github.com/graphile/worker/tree/main/website/docs/error-handling.md",tags:[],version:"current",sidebarPosition:130,frontMatter:{title:"Error handling",sidebar_position:130},sidebar:"tutorialSidebar",previous:{title:"Performance",permalink:"/docs/performance"},next:{title:"Exponential backoff",permalink:"/docs/exponential-backoff"}},s={},d=[{value:"Task failure",id:"task-failure",level:2},{value:"Termination signal",id:"termination-signal",level:2},{value:"Instantaneous exit",id:"instantaneous-exit",level:2},{value:"Database migration",id:"database-migration",level:2},{value:"Error codes",id:"error-codes",level:2}],c={toc:d},u="wrapper";function p(e){let{components:r,...n}=e;return(0,a.yg)(u,(0,t.A)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"error-handling"},"Error handling"),(0,a.yg)("p",null,"You might be wondering ","\u201c","what happens if something goes wrong?","\u201d"," Here\nare a few common ways things can go wrong, and how Graphile Worker handles them."),(0,a.yg)("h2",{id:"task-failure"},"Task failure"),(0,a.yg)("p",null,"If a job throws an error, the job is failed and scheduled for retries with\nexponential back-off. We use async/await so, assuming you write your task code\nwell, all errors should be cascaded down automatically."),(0,a.yg)("h2",{id:"termination-signal"},"Termination signal"),(0,a.yg)("p",null,"If the worker is sent a termination signal (",(0,a.yg)("inlineCode",{parentName:"p"},"SIGTERM"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"SIGINT"),", etc), it\ntriggers a graceful shutdown ","\u2014"," i.e. it stops accepting new jobs, waits for\nthe existing jobs to complete, and then exits. If you need to restart your\nworker, you should do so using this graceful process. After 5 seconds (during\nwhich more terminal signals are ignored), if another terminal signal is sent it\nwill trigger a forceful shutdown: all running jobs will be ","\u201c","failed","\u201d","\n(i.e. will retry on another worker after their exponential back-off) and then\nthe worker will exit."),(0,a.yg)("h2",{id:"instantaneous-exit"},"Instantaneous exit"),(0,a.yg)("p",null,"If the worker is terminated in a way that cannot be handled (e.g.\n",(0,a.yg)("inlineCode",{parentName:"p"},"process.exit()"),", segfault, ",(0,a.yg)("inlineCode",{parentName:"p"},"SIGKILL"),", someone pulled the power cord, etc) then\nthe jobs that that worker was executing remain locked for at least 4 hours.\nEvery 8-10 minutes a worker will sweep for jobs that have been locked for more\nthan 4 hours and will make them available to be processed again automatically.\nIf you run many workers, each worker will do this, so it","'","s likely that jobs\nwill be released closer to the 4 hour mark. You can unlock jobs earlier than\nthis by clearing the ",(0,a.yg)("inlineCode",{parentName:"p"},"locked_at")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"locked_by")," columns on the relevant tables."),(0,a.yg)("p",null,"If the worker schema has not yet been installed into your database, the\nfollowing error may appear in your PostgreSQL server logs. This is completely\nharmless and should only appear once as the worker will create the schema for\nyou."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'ERROR: relation "graphile_worker.migrations" does not exist at character 16\nSTATEMENT: select id from "graphile_worker".migrations order by id desc limit 1;\n')),(0,a.yg)("h2",{id:"database-migration"},"Database migration"),(0,a.yg)("p",null,"If a new version of Graphile Worker is ran against the database, and this\nversion includes new migrations, then a NOTIFY event will be issued. Graphile\nWorker 0.16+ will LISTEN for this event, and will shut down if it is received."),(0,a.yg)("h2",{id:"error-codes"},"Error codes"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"GWBKM")," - Invalid ",(0,a.yg)("inlineCode",{parentName:"li"},"job_key_mode")," value, expected ",(0,a.yg)("inlineCode",{parentName:"li"},"'replace'"),",\n",(0,a.yg)("inlineCode",{parentName:"li"},"'preserve_run_at'")," or ",(0,a.yg)("inlineCode",{parentName:"li"},"'unsafe_dedupe'"),".")))}p.isMDXComponent=!0}}]);