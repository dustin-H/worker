"use strict";(self.webpackChunkgraphile_worker=self.webpackChunkgraphile_worker||[]).push([[1633],{9916:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>g});var a=r(3696);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),h=n,g=u["".concat(l,".").concat(h)]||u[h]||d[h]||o;return r?a.createElement(g,i(i({ref:t},c),{},{components:r})):a.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4837:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=r(8102),n=(r(3696),r(9916));const o={title:"Database schema",sidebar_position:63},i=void 0,s={unversionedId:"schema",id:"schema",title:"Database schema",description:"By default, Graphile Worker installs its tables and functions into a database",source:"@site/docs/schema.md",sourceDirName:".",slug:"/schema",permalink:"/docs/schema",draft:!1,editUrl:"https://github.com/graphile/worker/tree/main/website/docs/schema.md",tags:[],version:"current",sidebarPosition:63,frontMatter:{title:"Database schema",sidebar_position:63},sidebar:"tutorialSidebar",previous:{title:"Logger",permalink:"/docs/library/logger"},next:{title:"TypeScript",permalink:"/docs/typescript"}},l={},p=[{value:"Only use public APIs",id:"only-use-public-apis",level:2},{value:"Tracking jobs",id:"tracking-jobs",level:2},{value:"Using a PostgreSQL user with restricted rights",id:"using-a-postgresql-user-with-restricted-rights",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.yg)(u,(0,a.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"By default, Graphile Worker installs its tables and functions into a database\nschema (namespace) called ",(0,n.yg)("inlineCode",{parentName:"p"},"graphile_worker"),", though this is configurable."),(0,n.yg)("h2",{id:"only-use-public-apis"},"Only use public APIs"),(0,n.yg)("p",null,"You should interact with Graphile Worker using the APIs documented in this\nwebsite (such as the ",(0,n.yg)("a",{parentName:"p",href:"/docs/sql-add-job"},(0,n.yg)("inlineCode",{parentName:"a"},"graphile_worker.add_job()")," function"),"\nthe ",(0,n.yg)("a",{parentName:"p",href:"/docs/admin-functions"},"administrative functions"),", and\n",(0,n.yg)("a",{parentName:"p",href:"/docs/jobs-view"},"the ",(0,n.yg)("inlineCode",{parentName:"a"},"jobs")," view"),"). Database tables are not a public interface!"),(0,n.yg)("admonition",{type:"warning"},(0,n.yg)("p",{parentName:"admonition"},"Do not use the various tables (",(0,n.yg)("inlineCode",{parentName:"p"},"_private_jobs"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"_private_job_queues"),",\n",(0,n.yg)("inlineCode",{parentName:"p"},"_private_known_crontabs"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"_private_tasks"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"migrations"),") directly. There are a\nfew reasons for this:"),(0,n.yg)("ol",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ol"},"The various tables may change in a minor version, breaking your assumptions\n(see, for example, the v0.13 \u27a1\ufe0f v0.14 or v0.15 \u27a1\ufe0f v0.16 big shifts)"),(0,n.yg)("li",{parentName:"ol"},"Reading from the jobs table (or the jobs view) impacts performance of the\nqueue ","\u2014"," especially when scanning over all records"),(0,n.yg)("li",{parentName:"ol"},"Reading from the jobs table inside a transaction prevents those jobs being\nworked on (they may be skipped over as if they don't exist) ","\u2014"," this can\nlead to unexpected results, such as out-of-order execution."))),(0,n.yg)("admonition",{type:"tip"},(0,n.yg)("p",{parentName:"admonition"},"It should be safe to read from ",(0,n.yg)("a",{parentName:"p",href:"/docs/jobs-view"},"the ",(0,n.yg)("inlineCode",{parentName:"a"},"jobs")," view")," in a read\nreplica, but be aware that certain data such as locking information may be out\nof date or incorrect therein.")),(0,n.yg)("h2",{id:"tracking-jobs"},"Tracking jobs"),(0,n.yg)("p",null,'Should you need to track completed jobs or associate additional data with any\njobs, we suggest that you create a "shadow" table in your own application\'s\nschema in which you can store additional details.'),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Create your own function to add jobs that delegates to\n",(0,n.yg)("inlineCode",{parentName:"li"},"graphile_worker.add_job(...)")," under the hood"),(0,n.yg)("li",{parentName:"ol"},'In your function, insert details of the job into your own "shadow" table'),(0,n.yg)("li",{parentName:"ol"},'If you want, add a reference from your "shadow" table to the\n',(0,n.yg)("inlineCode",{parentName:"li"},"graphile_worker._private_jobs")," table but be sure to add ",(0,n.yg)("inlineCode",{parentName:"li"},"ON DELETE CASCADE"),"\n(to delete the row) or ",(0,n.yg)("inlineCode",{parentName:"li"},"ON DELETE SET NULL")," (to nullify the job id column).\nNote that doing this has performance overhead for the queue, so you should be\nvery certain that you need it before doing it. Also this is a private table\nso its schema is likely to change, but you're only referencing the primary\nkey here so it should be fine."),(0,n.yg)("li",{parentName:"ol"},'Optionally, add the id of this "shadow" record into the job payload (before\ncalling ',(0,n.yg)("inlineCode",{parentName:"li"},"graphile_worker.add_job(...)"),'); then you can update this "shadow"\nrow from your task code. This is particularly useful to keep the end user\nabreast of the progress of their various background jobs, but is also useful\nfor tracking completed jobs (which Graphile Worker will delete on success).')),(0,n.yg)("h2",{id:"using-a-postgresql-user-with-restricted-rights"},"Using a PostgreSQL user with restricted rights"),(0,n.yg)("p",null,"Graphile Worker expects to execute as the database owner (not superuser) role.\nIf you want to use a PostgreSQL user with limited permissions instead, you will\nneed to make some adjustments."),(0,n.yg)("p",null,"For example, if you want to create the ",(0,n.yg)("inlineCode",{parentName:"p"},"graphile_worker")," schema yourself then\nyou can follow the technique described in\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/graphile/worker/issues/132"},"issue #132")," to avoid errors\nabout the worker role missing the privileges required to create the\n",(0,n.yg)("inlineCode",{parentName:"p"},"graphile_worker")," schema. Worker determines whether to create the schema or not\nbased on whether or not the migrations table in the schema exists, so by\ncreating the migrations table in addition to the ",(0,n.yg)("inlineCode",{parentName:"p"},"graphile_worker")," schema Worker\nshould be able to move on to the next step without raising an error."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sql"},"create schema graphile_worker;\ncreate table graphile_worker.migrations (\n  id int primary key,\n  ts timestamptz default now() not null,\n  breaking bool default false not null\n);\n")))}d.isMDXComponent=!0}}]);